

//User function Template for Java


class Solution
{
    //Function to return a list containing the bottom view of the given tree.
    
    static class info{
        Node node;
        int hd;
        
         public info(Node node,int hd){
            this.node = node;
            this.hd = hd;
        }
    }
    public ArrayList <Integer> bottomView(Node root)
    {
      Queue<info> q=new LinkedList<>();
      q.add(new info(root,0));
      Map<Integer,Node> map=new HashMap<>();
     int min=0,max=0;
      ArrayList <Integer> res=new ArrayList<>();
      while(!q.isEmpty())
      {
          info curr=q.remove();
          if(curr.node==null)
          {
              if(q.isEmpty())
              {
                  break;
              }else
              {
                  q.add(null);
              }
          }else
          {
              map.put(curr.hd,curr.node);
              
              if(curr.node.left!=null)
              {
                  q.add(new info(curr.node.left,curr.hd-1));
                  min=Math.min(min,curr.hd-1);
              }
              
              if(curr.node.right!=null)
              {
                  q.add(new info(curr.node.right,curr.hd+1));
                 max=Math.max(max,curr.hd+1); 
              }
          }
      }
      
      for(int i=min;i<=max;i++)
      {
          res.add(map.get(i).data);
      }
      return res;
    }
}
