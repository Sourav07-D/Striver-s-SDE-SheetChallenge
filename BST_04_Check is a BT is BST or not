/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    // public boolean isValidBST(TreeNode root) {
    //     return isValidBST(root, Long.MIN_VALUE, Long.MAX_VALUE);
    // }
    
    // public boolean isValidBST(TreeNode root, long minVal, long maxVal) {
    //     if (root == null) return true;
    //     if (root.val >= maxVal || root.val <= minVal) return false;
    //     return isValidBST(root.left, minVal, root.val) && isValidBST(root.right, root.val, maxVal);
    // }
       public static boolean isValid(TreeNode root,TreeNode min ,TreeNode max){
       if(root==null)
       {
           return true;
       }
       if(min!=null && root.val<=min.val)
       {
           return false;
       }
       if(max!=null && root.val>=max.val)
       {
           return false;
       }
       return isValid(root.left,min,root) && isValid(root.right,root,max);

    }
    public boolean isValidBST(TreeNode root) {
      return isValid(root,null,null);
    }
}
